{"version":3,"sources":["components/Book/Book.js","components/Library/Library.js","components/Header/Header.js","components/Navigation/Navigation.js","components/Footer/Footer.js","App/Signature.js","App/App.js","serviceWorker.js","index.js"],"names":["book","props","form","editable","className","type","value","title","onChange","handleTitle","author","handleAuthor","description","handleDescription","disabled","isRead","onClick","edit","icon","fa","read","delete","Library","state","initialState","this","save","idCounter","setState","i","event","books","slice","bookIndex","findIndex","b","id","isEditable","splice","filter","console","log","property","target","preventDefault","map","key","editHandler","bind","readHandler","deleteHandler","handleChange","concat","addBookHandler","size","incrementId","showUnread","renderAllBooks","renderReadBooks","saveLibrary","renderBooks","React","Component","Header","fab","saved","Navigation","marker","Footer","Signature","style","background","position","bottom","margin","width","height","display","justifyContent","color","href","cursor","App","JSON","parse","ls","get","libraryState","set","stringify","bool","textContent","saveLibraryInLocalStorage","showUnreadHandler","saveLibraryInApp","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0aA0CeA,MArCf,SAAcC,GACV,IAAIC,EAwBA,OAtBAA,EADAD,EAAME,SAEF,0BAAMC,UAAU,aAAhB,QAEI,2BAAOC,KAAK,OAAOD,UAAU,aAAaE,MAAOL,EAAMM,MAAOC,SAAUP,EAAMQ,cAFlF,SAII,2BAAOJ,KAAK,OAAOD,UAAU,cAAcE,MAAOL,EAAMS,OAAQF,SAAUP,EAAMU,eAJpF,cAMI,2BAAON,KAAK,WAAWD,UAAU,mBAAmBE,MAAOL,EAAMW,YAAaJ,SAAUP,EAAMY,qBAKlG,0BAAMT,UAAU,aAAhB,QAEI,2BAAOC,KAAK,OAAOD,UAAU,aAAaE,MAAOL,EAAMM,MAAOO,UAAQ,IAF1E,SAII,2BAAOT,KAAK,OAAOD,UAAU,cAAcE,MAAOL,EAAMS,OAAQI,UAAQ,IAJ5E,cAMI,2BAAOT,KAAK,WAAWD,UAAU,mBAAmBE,MAAOL,EAAMW,YAAaE,UAAQ,KAK9F,6BAASV,UAAW,SAAWH,EAAMc,OAAS,YAAc,KACxD,4BAAQX,UAAU,aACd,4BAAQY,QAASf,EAAMgB,MAAM,kBAAC,IAAD,CAAiBC,KAAQjB,EAAME,SAAwBgB,IAAZA,OACxE,4BAAQH,QAASf,EAAMmB,MAAM,kBAAC,IAAD,CAAiBF,KAAMC,OACpD,4BAAQH,QAASf,EAAMoB,QAAQ,kBAAC,IAAD,CAAiBH,KAAMC,QAEzDjB,ICkHEoB,G,wDAhJX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQtB,EAAMuB,aAFJ,E,0DAMnBC,KAAKxB,MAAMyB,KAAKD,KAAKF,S,oCAIjB,IAAII,EAAYF,KAAKF,MAAMI,UAE3B,OADAF,KAAKG,SAAS,CAACD,YAAaA,IACrBA,I,kCAGCE,EAAEC,GACV,IAAMC,EAAQN,KAAKF,MAAMQ,MAAMC,QACzBC,EAAYF,EAAMG,WAAU,SAACC,GAAD,OAAQA,EAAEC,KAAOP,KAC7C7B,EAAI,2BACH+B,EAAME,IADH,IAENI,YAAaN,EAAME,GAAWI,aAGlCN,EAAMO,OAAOL,EAAW,EAAGjC,GAC3ByB,KAAKG,SAAS,CAACG,MAAOA,M,kCAGdF,GACR,IAAME,EAAQN,KAAKF,MAAMQ,MAAMC,QACzBC,EAAYF,EAAMG,WAAU,SAACC,GAAD,OAAQA,EAAEC,KAAOP,KAC7C7B,EAAI,2BACH+B,EAAME,IADH,IAENlB,QAASgB,EAAME,GAAWlB,SAE9BgB,EAAMO,OAAOL,EAAW,EAAGjC,GAC3ByB,KAAKG,SAAS,CAACG,MAAOA,M,oCAGZF,GAAI,IAAD,OAEP7B,EADQyB,KAAKF,MAAMQ,MAAMC,QACZO,QAAO,SAACJ,GAAD,OAAQA,EAAEC,KAAOP,KAC3CJ,KAAKG,SAAS,CAACG,MAAO/B,IAAO,kBAAMwC,QAAQC,IAAI,EAAKlB,MAAMI,gB,mCAGjDE,EAAEa,EAASZ,GACpB,IAAMC,EAAQN,KAAKF,MAAMQ,MAAMC,QACzBC,EAAYF,EAAMG,WAAU,SAACC,GAAD,OAAQA,EAAEC,KAAOP,KAC7C7B,EAAI,eACH+B,EAAME,IAEbjC,EAAK0C,GAAYZ,EAAMa,OAAOrC,MAC9BwB,EAAMc,iBACNb,EAAMO,OAAOL,EAAW,EAAGjC,GAC3ByB,KAAKG,SAAS,CAACG,MAAOA,M,wCAGP,IAAD,OACd,OAAON,KAAKF,MAAMQ,MAAMQ,QAAO,SAAAvC,GAAI,OAAIA,EAAKe,UAAQ8B,KAAI,SAAA7C,GACpD,OACI,kBAAC,EAAD,CAAM8C,IAAK9C,EAAKoC,GACVA,GAAMpC,EAAKoC,GACXnB,KAAM,EAAK8B,YAAYC,KAAK,EAAMhD,EAAKoC,IACvChB,KAAM,EAAK6B,YAAYD,KAAK,EAAMhD,EAAKoC,IACvCf,OAAQ,EAAK6B,cAAcF,KAAK,EAAMhD,EAAKoC,IAC3CrB,OAAQf,EAAKe,OACbZ,SAAUH,EAAKqC,WAEf5B,YAAa,EAAK0C,aAAaH,KAAK,EAAKhD,EAAKoC,GAAG,SACjDzB,aAAc,EAAKwC,aAAaH,KAAK,EAAKhD,EAAKoC,GAAG,UAClDvB,kBAAmB,EAAKsC,aAAaH,KAAK,EAAKhD,EAAKoC,GAAG,eAEvD7B,MAAOP,EAAKO,MACZG,OAAQV,EAAKU,OACbE,YAAaZ,EAAKY,mB,uCAMlB,IAAD,OACb,OAAOa,KAAKF,MAAMQ,MAAMc,KAAI,SAAA7C,GACxB,OACI,kBAAC,EAAD,CAAM8C,IAAK9C,EAAKoC,GACVA,GAAMpC,EAAKoC,GACXnB,KAAM,EAAK8B,YAAYC,KAAK,EAAMhD,EAAKoC,IACvChB,KAAM,EAAK6B,YAAYD,KAAK,EAAMhD,EAAKoC,IACvCf,OAAQ,EAAK6B,cAAcF,KAAK,EAAMhD,EAAKoC,IAC3CrB,OAAQf,EAAKe,OACbZ,SAAUH,EAAKqC,WAEf5B,YAAa,EAAK0C,aAAaH,KAAK,EAAKhD,EAAKoC,GAAG,SACjDzB,aAAc,EAAKwC,aAAaH,KAAK,EAAKhD,EAAKoC,GAAG,UAClDvB,kBAAmB,EAAKsC,aAAaH,KAAK,EAAKhD,EAAKoC,GAAG,eAEvD7B,MAAOP,EAAKO,MACZG,OAAQV,EAAKU,OACbE,YAAaZ,EAAKY,iBAG7BwC,OAAO,CAAC,yBAAKhD,UAAU,iBAAiB0C,IAAI,OAC3C,4BAAQ9B,QAASS,KAAK4B,eAAeL,KAAKvB,OAAO,kBAAC,IAAD,CAAiBP,KAAMC,IAAWmC,KAAK,a,uCAK5F,IADa,EAE+C,CACxDlB,GAFWX,KAAK8B,cAGhBhD,MAAO,YACPG,OAAQ,SACRE,YAAa,cACbG,QAAQ,EACRsB,YAAY,GANTD,EAFM,EAENA,GAAI7B,EAFE,EAEFA,MAAOG,EAFL,EAEKA,OAAQE,EAFb,EAEaA,YAAaG,EAF1B,EAE0BA,OAAOsB,EAFjC,EAEiCA,WAQ9CZ,KAAKG,SAAS,CACVG,MAAO,YAAIN,KAAKF,MAAMQ,OAAOqB,OAAO,CAAC,CACjChB,KACA7B,QACAG,SACAE,cACAG,SACAsB,oB,oCAMR,OAAIZ,KAAKxB,MAAMuD,WACJ/B,KAAKgC,iBAELhC,KAAKiC,oB,+BAMhB,OADAjC,KAAKkC,cAED,yBAAKvD,UAAU,WACVqB,KAAKmC,mB,GA3IAC,IAAMC,Y,eCabC,MAZf,SAAgB9D,GACZ,OACI,0BAAQG,UAAU,cACd,0BACI,gBAAC,IAAD,CAAiBc,KAAM8C,IAAaV,KAAK,OACzC,gDAEJ,0BAAQtC,QAASf,EAAMgE,OAAO,gBAAC,IAAD,CAAiB/C,KAAMC,IAAWmC,KAAK,U,MCAlEY,MAXf,SAAoBjE,GAChB,OACI,yBAAKG,UAAU,kBACX,4BACI,wBAAIY,QAASf,EAAMuD,WAAYpD,UAAWH,EAAMkE,OAAS,0BAA4B,IAArF,aACA,wBAAInD,QAASf,EAAMuD,WAAYpD,UAAaH,EAAMkE,OAAsC,GAA5B,2BAA5D,iB,MCCDC,MANf,WACI,OACI,oD,uBC2DOC,MA5Df,WAwCI,OACI,yBAAKjE,UAAU,SACVkE,MAzCO,CACZC,WAAY,UACZC,SAAU,QACVC,OAAQ,IACRC,OAAQ,UACRC,MAAO,OACPC,OAAQ,OACRC,QAAQ,OACRC,eAAgB,eAChBC,MAAM,UAiCF,yBAAK3E,UAAU,OAAOkE,MAnBb,CACbI,OAAQ,qBAkBJ,0CAIA,uBAAGM,KAAK,0CACLV,MAnCS,CAChBI,OAAQ,qBACRK,MAAO,QACPE,OAAQ,YAiCA,kBAAC,IAAD,CAAiB/D,KAAM8C,IAAcV,KAAK,KAAKgB,MA9BnC,CACpBS,MAAO,QACPE,OAAQ,cAoBR,OAWI,uBAAGD,KAAK,uCACLV,MAzBW,CAClBI,OAAQ,mBACRK,MAAO,QACPE,OAAQ,YAuBA,kBAAC,IAAD,CAAiB/D,KAAM8C,IAAgBV,KAAK,KAAKgB,MApBnC,CACtBS,MAAO,QACPE,OAAQ,gBCGDC,E,kDAhCX,WAAYjF,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQ,CAACiC,YAAY,GAC1B,EAAKS,MAAQkB,KAAKC,MAAOC,IAAGC,IAAI,gBAAmBD,IAAGC,IAAI,gBAAkB,8BAH7D,E,6DAMFC,GACb9D,KAAKwC,MAAL,eAAiBsB,K,kDAIjBF,IAAGG,IAAI,eAAeL,KAAKM,UAAUhE,KAAKwC,U,wCAG5BnC,GACd,IAAM4D,EAAqC,cAA7B5D,EAAMa,OAAOgD,YAC3BlE,KAAKG,SAAS,CAAC4B,WAAYkC,M,+BAI3B,OACI,yBAAKtF,UAAU,OACX,kBAAC,EAAD,CAAQ6D,MAAOxC,KAAKmE,0BAA0B5C,KAAKvB,QACnD,kBAAC,EAAD,CAAY+B,WAAY/B,KAAKoE,kBAAkB7C,KAAKvB,MAAO0C,OAAQ1C,KAAKF,MAAMiC,aAC9E,kBAAC,EAAD,CAAS9B,KAAMD,KAAKqE,iBAAiB9C,KAAKvB,MAAOD,aAAY,eAAMC,KAAKwC,OAAQT,WAAY/B,KAAKF,MAAMiC,aACvG,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA3BEK,IAAMC,W,MCEJiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvE,QAAQuE,MAAMA,EAAMC,c","file":"static/js/main.15a0c968.chunk.js","sourcesContent":["import React from \"react\";\nimport './Book.css'\nimport * as fa from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction book(props) {\n    let form;\n    if (props.editable) {\n        form = (\n            <form className=\"book-info\">\n                Title\n                <input type=\"text\" className=\"book-title\" value={props.title} onChange={props.handleTitle}/>\n                Author\n                <input type=\"text\" className=\"book-author\" value={props.author} onChange={props.handleAuthor}/>\n                Description\n                <input type=\"textarea\" className=\"book-description\" value={props.description} onChange={props.handleDescription}/>\n            </form>\n        )\n    } else {\n        form = (\n            <form className=\"book-info\">\n                Title\n                <input type=\"text\" className=\"book-title\" value={props.title} disabled/>\n                Author\n                <input type=\"text\" className=\"book-author\" value={props.author} disabled/>\n                Description\n                <input type=\"textarea\" className=\"book-description\" value={props.description} disabled/>\n            </form>\n        )\n    }\n        return (\n        <section className={\"book \" + (props.isRead ? \"book-read\" : \"\")}>\n            <header className=\"book-menu\">\n                <button onClick={props.edit}><FontAwesomeIcon icon={!(props.editable) ? fa.faEdit : fa.faSave} /></button>\n                <button onClick={props.read}><FontAwesomeIcon icon={fa.faStar} /></button>\n                <button onClick={props.delete}><FontAwesomeIcon icon={fa.faTrash} /></button>\n            </header>\n            {form}\n        </section>\n    )\n}\n\nexport default book","import React from \"react\";\nimport Book from \"../Book/Book\";\nimport './Library.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport * as fa from \"@fortawesome/free-solid-svg-icons\";\n\nclass Library extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = props.initialState;\n    }\n\n    saveLibrary() {\n    this.props.save(this.state);\n    }\n\n    incrementId() {\n        let idCounter = this.state.idCounter;\n        this.setState({idCounter: ++idCounter});\n        return idCounter;\n    }\n\n    editHandler(i,event) {\n        const books = this.state.books.slice();\n        const bookIndex = books.findIndex((b) => (b.id === i));\n        const book = {\n            ...books[bookIndex],\n            isEditable: !books[bookIndex].isEditable\n        };\n\n        books.splice(bookIndex, 1, book);\n        this.setState({books: books});\n    }\n\n    readHandler(i) {\n        const books = this.state.books.slice();\n        const bookIndex = books.findIndex((b) => (b.id === i));\n        const book = {\n            ...books[bookIndex],\n            isRead: !books[bookIndex].isRead\n        };\n        books.splice(bookIndex, 1, book);\n        this.setState({books: books});\n    }\n\n    deleteHandler(i) {\n        const books = this.state.books.slice();\n        const book = books.filter((b) => (b.id !== i));\n        this.setState({books: book}, () => console.log(this.state.idCounter));\n    }\n\n    handleChange(i,property,event) {\n        const books = this.state.books.slice();\n        const bookIndex = books.findIndex((b) => (b.id === i));\n        const book = {\n            ...books[bookIndex],\n        };\n        book[property] = event.target.value;\n        event.preventDefault();\n        books.splice(bookIndex, 1, book);\n        this.setState({books: books});\n    }\n\n    renderReadBooks() {\n        return this.state.books.filter(book => book.isRead).map(book => {\n            return (\n                <Book key={book.id}\n                      id = {book.id}\n                      edit={this.editHandler.bind(this, book.id)}\n                      read={this.readHandler.bind(this, book.id)}\n                      delete={this.deleteHandler.bind(this, book.id)}\n                      isRead={book.isRead}\n                      editable={book.isEditable}\n\n                      handleTitle={this.handleChange.bind(this,book.id,\"title\")}\n                      handleAuthor={this.handleChange.bind(this,book.id,\"author\")}\n                      handleDescription={this.handleChange.bind(this,book.id,\"description\")}\n\n                      title={book.title}\n                      author={book.author}\n                      description={book.description}\n                />\n            )\n        })\n    }\n\n    renderAllBooks() {\n        return this.state.books.map(book => {\n            return (\n                <Book key={book.id}\n                      id = {book.id}\n                      edit={this.editHandler.bind(this, book.id)}\n                      read={this.readHandler.bind(this, book.id)}\n                      delete={this.deleteHandler.bind(this, book.id)}\n                      isRead={book.isRead}\n                      editable={book.isEditable}\n\n                      handleTitle={this.handleChange.bind(this,book.id,\"title\")}\n                      handleAuthor={this.handleChange.bind(this,book.id,\"author\")}\n                      handleDescription={this.handleChange.bind(this,book.id,\"description\")}\n\n                      title={book.title}\n                      author={book.author}\n                      description={book.description}\n                />\n            )\n        }).concat([<div className=\"button-wrapper\" key=\"btn\">\n            <button onClick={this.addBookHandler.bind(this)}><FontAwesomeIcon icon={fa.faPlus} size=\"2x\" /></button>\n        </div>])\n    }\n\n    addBookHandler() {\n        const currId = this.incrementId();\n        const {id, title, author, description, isRead,isEditable} = {\n            id: currId,\n            title: \"New title\",\n            author: \"Author\",\n            description: \"Description\",\n            isRead: false,\n            isEditable: false\n        };\n        this.setState({\n            books: [...this.state.books].concat([{\n                id,\n                title,\n                author,\n                description,\n                isRead,\n                isEditable\n            }])\n        })\n    }\n\n    renderBooks() {\n        if (this.props.showUnread) {\n            return this.renderAllBooks();\n        } else {\n            return this.renderReadBooks();\n        }\n    }\n\n    render() {\n        this.saveLibrary();\n        return (\n            <div className=\"library\">\n                {this.renderBooks()}\n            </div>\n        )\n    }\n}\n\nexport default Library","import * as React from \"react\";\nimport './Header.css'\n\nimport * as fa from \"@fortawesome/free-solid-svg-icons\";\nimport * as fab from \"@fortawesome/free-brands-svg-icons\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction Header(props) {\n    return (\n        <header className=\"app-header\">\n            <h1>\n                <FontAwesomeIcon icon={fab.faReact} size='2x'/>\n                <span>Library Manager</span>\n            </h1>\n            <button onClick={props.saved}><FontAwesomeIcon icon={fa.faSave} size='3x' /></button>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport './Navigation.css'\n\nfunction Navigation(props) {\n    return (\n        <nav className=\"app-navigation\">\n            <ul>\n                <li onClick={props.showUnread} className={props.marker ? \"app-navigation-selected\" : \"\"}>All books</li>\n                <li onClick={props.showUnread} className={!(props.marker) ? \"app-navigation-selected\" : \"\"}>Read books</li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation","import React from \"react\";\nimport './Footer.css'\n\nfunction Footer() {\n    return (\n        <footer>Made by Anas R.</footer>\n    )\n}\n\nexport default Footer","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport * as fab from \"@fortawesome/free-brands-svg-icons\"\nimport React from \"react\";\n\nfunction Signature() {\n    const styleMain={\n        background: \"#4A5568\",\n        position: \"fixed\",\n        bottom: \"0\",\n        margin: \"0 -80px\",\n        width: \"100%\",\n        height: \"50px\",\n        display:\"flex\",\n        justifyContent: \"space-around\",\n        color:\"white\"\n    }\n\n    const styleGithub = {\n        margin: \"auto 5px auto 10px\",\n        color: \"white\",\n        cursor: 'pointer'\n    }\n\n    const styleGithubIcon = {\n        color: \"white\",\n        cursor: 'pointer'\n    }\n\n    const styleTxt = {\n        margin: \"auto 0 auto auto\"\n    }\n\n    const styleLinkedIn = {\n        margin: \"auto auto auto 0\",\n        color: \"white\",\n        cursor: 'pointer'\n    }\n\n    const styleLinkedInIcon = {\n        color: \"white\",\n        cursor: 'pointer'\n    }\n\n\n    return (\n        <div className=\"github\"\n             style={styleMain}>\n            <div className=\"text\" style={styleTxt}>Part of my\n                The ODIN\n                Project portfolio.\n            </div>\n            <a href=\"https://github.com/anas-r/react-library\"\n               style={styleGithub}>\n                <FontAwesomeIcon icon={fab.faGithub} size='2x' style={styleGithubIcon}/>\n            </a>\n            &nbsp;\n            <a href=\"https://www.linkedin.com/in/s-s-s-s/\"\n               style={styleLinkedIn}>\n                <FontAwesomeIcon icon={fab.faLinkedin} size='2x' style={styleLinkedInIcon}/>\n            </a>\n        </div>\n    )\n}\n\nexport default Signature","import React from 'react';\nimport Library from \"../components/Library/Library\";\nimport Header from \"../components/Header/Header\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport Footer from \"../components/Footer/Footer\";\nimport ls from 'local-storage'\nimport './App.css';\nimport Signature from \"./Signature\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {showUnread: true}\n        this.saved = JSON.parse((ls.get(\"savedLibrary\")) ? ls.get(\"savedLibrary\") : \"{\\\"idCounter\\\":0,\\\"books\\\":[]}\");\n    }\n\n    saveLibraryInApp(libraryState) {\n        this.saved = {...libraryState};\n    }\n\n    saveLibraryInLocalStorage() {\n        ls.set(\"savedLibrary\",JSON.stringify(this.saved));\n    }\n\n    showUnreadHandler(event) {\n        const bool = (event.target.textContent === \"All books\");\n        this.setState({showUnread: bool});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header saved={this.saveLibraryInLocalStorage.bind(this)}/>\n                <Navigation showUnread={this.showUnreadHandler.bind(this)} marker={this.state.showUnread}/>\n                <Library save={this.saveLibraryInApp.bind(this)} initialState={{...this.saved}} showUnread={this.state.showUnread}/>\n                <Footer />\n                <Signature />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}